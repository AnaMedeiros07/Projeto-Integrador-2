//******************************
//****     	Variaveis	Globais	  *****
//******************************
//velocidade_control
#define n 15
int		sensor_A=0,				sensor_B=0;
float 	velocidade_ref=0.0,		kp=0.0,			ki=0.0;

int		flag_sentido = 0,		aux_delay_control = 0;

int 		FW=1, 		Enable = 1, 	count_sensor = 0, primeiro = 0;
float		DC = 0.0, 	speed_rpm = 0.0,	speed_medio = 0.0;
float old_speed_medio[n] = {0.0};

//******************************
//*******	 Funcoes		*******
//******************************
//#######################
int sentido(int aux_sensor_A, int aux_sensor_B){
	
	static int sensorA_ant;
	static int sentido_positivo=0;
	if(primeiro == 0) {
		sensorA_ant=aux_sensor_A;
		primeiro = 1;
	}
	else{
		if (sensorA_ant==0 &&  aux_sensor_A==1)
		{	
			count_sensor= count_sensor +1;
			if( aux_sensor_B==0)
				sentido_positivo=1;
			else if( aux_sensor_B==1) 
				sentido_positivo=-1;
			sensorA_ant=aux_sensor_A;
		}
		else
			sensorA_ant=aux_sensor_A;
	}
	return sentido_positivo;
}


//#######################
float encoder_Speed(int aux_sensor_A, int aux_sentido, float tem){

	static float speed_avg=0;
	static float sum_speed=0.0;
	static int index = 0;
		speed_rpm = count_sensor*(60.0)*aux_sentido/(2*960.0*tem);
		sum_speed=sum_speed +speed_rpm- old_speed_medio[index];
		old_speed_medio[index]=speed_rpm;
		speed_avg=(float)sum_speed/n;
		++index;
		if(index == n)
			index=0;
		count_sensor=0;

	return speed_avg;
}


//#######################
void velocidade_control( float speed_ref, float speed){
	float error=0.0;
	float sum_error = 0.0;
	static float duty = 0.0;
	int ant_Dc= 0;
	kp =0.05;
	ki = 0.006;
	ant_Dc = DC;
	if(FW == 1)
		error = speed_ref - speed;
	else
		error = -speed_ref +speed;
	
	sum_error = sum_error + error;
	duty = kp*error+ki*sum_error;
	duty += DC;
	if (duty > 0){
		if(duty <= 100)
			DC = duty;
		else
			DC = 100;
		FW = 1;
	}
	else if(duty < 0){
		if(duty>=-100)
			DC = duty *(-1);
		else
			DC = 0;
		FW = 0;
	}

}
